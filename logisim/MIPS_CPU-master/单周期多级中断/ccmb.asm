#############################################################
#测试sllv, srlv, sh, bgtz指令
#############################################################
#半字存储测试 
 .text
 addi $s0,$0,8
 addi $s1,$0,0
 
 sh $s0,0($s1)
 sh $s1,2($s1)
 lw $s2, 0($s1)
 
 #移位测试
add $s1,$zero,$s2
addi $s0,$zero,2     #简单移位，循环测试，0号区域显示的是初始值1左移1位重复15次的值，1号区域是累加值
 
###################################################################
#                可变逻辑左移测试 
# 显示区域依次显示0x00000008 0x00000020 0x00000080 0x00000200 0x00000800 0x00002000 0x00008000 0x00020000 0x00080000 0x00200000 0x00800000 0x02000000 0x08000000 0x20000000 0x80000000
###################################################################
LogicalLeftShift:            #		可变逻辑左移测试

add    $a0,$0,$s1       #display $s1    #逻辑右移测试，将最高位1逐位向右右移直至结果为零
addi   $v0,$0,34        # display hex
syscall                 # we are out of here.  
     
sllv $s1, $s1, $s0   
bgtz $s1, LogicalLeftShift	#如果$s1大于0则跳转到LogicalLeftShift处继续循环执行

shift_next1:

add    $a0,$0,$s1        #display $s1
addi   $v0,$0,34         # display hex
syscall                 # we are out of here.  


###################################################################
#                可变逻辑右移测试 
# 显示区域依次显示0x40000000 0x10000000 0x04000000 0x01000000 0x00400000 0x00100000 0x00040000 0x00010000 0x00004000 0x00001000 0x00000400 0x00000100 0x00000040 0x00000010 0x00000004 0x00000001 
###################################################################

addi $s1,$zero, 1        #                可变逻辑右移测试 
sll $s1, $s1, 30
LogicalRightShift:         #逻辑右移测试，将最低位1逐位向左移直至结果为零

add    $a0,$0,$s1       #display $s1
addi   $v0,$0,34         # display hex
syscall                 # we are out of here
.   
srlv $s1, $s1, $s0  
bgtz $s1, LogicalRightShift #如果$s1大于0则跳转到LogicalRightShift处继续循环执行

shift_next2:
add    $a0,$0,$s1       #display $s1
addi   $v0,$0,10         # display hex
syscall                 # we are out of here.  
